name: Deploy to Maven Central

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from latest commit message
        id: extract_version
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          
          VERSION="0.0.0"
          if [[ "$COMMIT_MESSAGE" =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            VERSION=${BASH_REMATCH[0]#v} # Extract and remove 'v'
          echo "Extracted version: $VERSION"
          fi
          echo "::set-output name=version::$VERSION"

      - name: Show extracted version
        run: |
          echo "Extracted version: ${{ steps.extract_version.outputs.version }}"

      - name: Create a release
        uses: actions/create-release@v1.1.2
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          gpg --list-secret-keys --keyid-format LONG

      - name: Use VERSION from create-release
        run: |
          echo "Deploying version: ${{ needs.create-release.outputs.version }}"

      - name: Deploy to Maven Central
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew clean publish \
            -Psigning.keyId=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2) \
            -Psigning.password="${{ secrets.GPG_PASSPHRASE }}" \
            -PossrhUsername="${{ secrets.OSSRH_USERNAME }}" \
            -PossrhPassword="${{ secrets.OSSRH_PASSWORD }}" \
            -Pversion=${{ needs.create-release.outputs.version }}
